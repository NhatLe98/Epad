// <auto-generated />
using System;

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EPAD_Data.Migrations
{
    [DbContext(typeof(EPAD_Context))]
    [Migration("20210528030720_alterMasterUserTable")]
    partial class alterMasterUserTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EPAD_Backend_Core.Models.DTOs.HR_EmployeeReport", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CardNumber");

                    b.Property<int>("CompanyIndex");

                    b.Property<int?>("DepartmentIndex");

                    b.Property<string>("DepartmentName");

                    b.Property<string>("EmployeeCode");

                    b.Property<string>("FullName");

                    b.Property<short?>("Gender");

                    b.Property<string>("NameOnMachine");

                    b.HasKey("EmployeeATID");

                    b.ToTable("HR_EmployeeReport");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_AccessToken", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .HasMaxLength(200);

                    b.Property<int>("CompanyIndex");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<DateTime?>("ExpiredDate");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("Note")
                        .HasMaxLength(500);

                    b.Property<string>("Scope")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("Index");

                    b.ToTable("IC_AccessToken");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_AppLicense", b =>
                {
                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasMaxLength(2000);

                    b.Property<string>("Note")
                        .HasMaxLength(500);

                    b.Property<string>("PublicKey")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("CompanyIndex");

                    b.ToTable("IC_AppLicense");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_AttendanceLog", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CompanyIndex");

                    b.Property<DateTime>("CheckTime");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Function")
                        .HasMaxLength(50);

                    b.Property<short>("InOutMode");

                    b.Property<int?>("Reserve1");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.Property<short?>("VerifyMode");

                    b.Property<int?>("WorkCode");

                    b.HasKey("EmployeeATID", "CompanyIndex", "CheckTime", "SerialNumber");

                    b.ToTable("IC_AttendanceLog");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_Camera", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Password")
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Port");

                    b.Property<string>("Serial")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Camera");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_Command", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Command")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CommandName")
                        .HasMaxLength(50);

                    b.Property<int?>("CommandType");

                    b.Property<int>("CompanyIndex");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Error");

                    b.Property<bool>("Excuted");

                    b.Property<DateTime?>("ExcutedTime");

                    b.Property<DateTime?>("RequestedTime");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("Index");

                    b.ToTable("IC_Command");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_CommandSystemGroup", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("EventType")
                        .HasMaxLength(100);

                    b.Property<bool>("Excuted");

                    b.Property<string>("ExternalData");

                    b.Property<string>("GroupName")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("Index");

                    b.ToTable("IC_CommandSystemGroup");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_Company", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Password")
                        .HasMaxLength(500);

                    b.Property<string>("Phone")
                        .HasMaxLength(50);

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("Index");

                    b.ToTable("IC_Company");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_Config", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AlwaysSend");

                    b.Property<string>("BodyEmailError")
                        .HasColumnType("ntext");

                    b.Property<string>("BodyEmailSuccess")
                        .HasColumnType("ntext");

                    b.Property<int>("CompanyIndex");

                    b.Property<string>("CustomField")
                        .HasColumnType("ntext");

                    b.Property<string>("Email")
                        .HasColumnType("ntext");

                    b.Property<string>("EventType")
                        .HasMaxLength(100);

                    b.Property<int?>("PreviousDays");

                    b.Property<string>("ProceedAfterEvent")
                        .HasMaxLength(100);

                    b.Property<bool>("SendMailWhenError");

                    b.Property<string>("TimePos")
                        .HasColumnType("ntext");

                    b.Property<string>("TitleEmailError")
                        .HasMaxLength(200);

                    b.Property<string>("TitleEmailSuccess")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("Index");

                    b.ToTable("IC_Config");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_ConfigByGroupMachine", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AlwaysSend");

                    b.Property<string>("BodyEmailError")
                        .HasColumnType("ntext");

                    b.Property<string>("BodyEmailSuccess")
                        .HasColumnType("ntext");

                    b.Property<int>("CompanyIndex");

                    b.Property<string>("CustomField")
                        .HasColumnType("ntext");

                    b.Property<string>("Email")
                        .HasColumnType("ntext");

                    b.Property<string>("EventType")
                        .HasMaxLength(100);

                    b.Property<int>("GroupDeviceIndex");

                    b.Property<int?>("PreviousDays");

                    b.Property<string>("ProceedAfterEvent")
                        .HasMaxLength(100);

                    b.Property<bool>("SendMailWhenError");

                    b.Property<string>("TimePos")
                        .HasColumnType("ntext");

                    b.Property<string>("TitleEmailError")
                        .HasMaxLength(200);

                    b.Property<string>("TitleEmailSuccess")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("Index");

                    b.ToTable("IC_ConfigByGroupMachine");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_Controller", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("IDController")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Port");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("Index");

                    b.ToTable("IC_Controller");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_Department", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<int>("CompanyIndex");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int?>("ParentIndex");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("Index");

                    b.ToTable("IC_Department");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_DepartmentAndDevice", b =>
                {
                    b.Property<int>("DepartmentIndex");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50);

                    b.Property<int>("CompanyIndex");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("DepartmentIndex", "SerialNumber", "CompanyIndex");

                    b.ToTable("IC_DepartmentAndDevice");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_Device", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CompanyIndex");

                    b.Property<string>("ATTLOGStamp")
                        .HasMaxLength(15);

                    b.Property<string>("ATTPHOTOStamp")
                        .HasMaxLength(15);

                    b.Property<int?>("AdminCount");

                    b.Property<string>("AliasName")
                        .HasMaxLength(100);

                    b.Property<int?>("AttendanceLogCapacity");

                    b.Property<int?>("AttendanceLogCount");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int?>("Delay");

                    b.Property<int?>("DeviceNumber");

                    b.Property<int?>("DeviceType");

                    b.Property<short?>("Encrypt");

                    b.Property<int?>("ErrorDelay");

                    b.Property<string>("FINGERTMPStamp")
                        .HasMaxLength(15);

                    b.Property<int?>("FaceCount");

                    b.Property<int?>("FingerCapacity");

                    b.Property<int?>("FingerCount");

                    b.Property<string>("FirmwareVersion")
                        .HasMaxLength(50);

                    b.Property<string>("IPAddress")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("LastConnection");

                    b.Property<string>("OPERLOGStamp")
                        .HasMaxLength(15);

                    b.Property<string>("OpStamp")
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("OperationLogCount");

                    b.Property<string>("PhotoStamp")
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("Port");

                    b.Property<int?>("Realtime");

                    b.Property<string>("Reserve1")
                        .HasMaxLength(50);

                    b.Property<string>("Reserve2")
                        .HasMaxLength(50);

                    b.Property<int?>("Reserve3");

                    b.Property<string>("SMSStamp")
                        .HasMaxLength(15);

                    b.Property<string>("Stamp")
                        .HasColumnType("varchar(15)");

                    b.Property<short?>("TimeZoneclock");

                    b.Property<string>("TransFlag")
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("TransInterval");

                    b.Property<string>("TransTimes")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("USERINFOStamp")
                        .HasMaxLength(15);

                    b.Property<string>("USER_SMSStamp")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.Property<bool?>("UsePush");

                    b.Property<bool?>("UseSDK");

                    b.Property<int?>("UserCapacity");

                    b.Property<int?>("UserCount");

                    b.HasKey("SerialNumber", "CompanyIndex");

                    b.ToTable("IC_Device");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_Employee", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CompanyIndex");

                    b.Property<string>("CardNumber")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int>("DepartmentIndex");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(50);

                    b.Property<string>("FullName")
                        .HasMaxLength(200);

                    b.Property<short?>("Gender");

                    b.Property<DateTime>("JoinedDate");

                    b.Property<string>("NameOnMachine")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("StoppedDate");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("IC_Employee");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_EmployeeTransfer", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CompanyIndex");

                    b.Property<int>("NewDepartment");

                    b.Property<DateTime>("FromTime");

                    b.Property<bool>("AddOnNewDepartment");

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<string>("ApprovedUser")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<bool>("IsSync");

                    b.Property<int?>("OldDepartment");

                    b.Property<bool>("RemoveFromOldDepartment");

                    b.Property<short>("Status");

                    b.Property<DateTime>("ToTime");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("EmployeeATID", "CompanyIndex", "NewDepartment", "FromTime");

                    b.ToTable("IC_EmployeeTransfer");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_GroupDevice", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("Index");

                    b.ToTable("IC_GroupDevice");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_GroupDeviceDetails", b =>
                {
                    b.Property<int>("GroupDeviceIndex");

                    b.Property<int>("CompanyIndex");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("GroupDeviceIndex", "CompanyIndex", "SerialNumber");

                    b.ToTable("IC_GroupDeviceDetails");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_HardwareLicense", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex");

                    b.Property<string>("Data")
                        .HasMaxLength(2000);

                    b.Property<string>("FileName")
                        .HasMaxLength(50);

                    b.Property<string>("Note")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("Index");

                    b.ToTable("IC_HardwareLicense");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_OperationLog", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CompanyIndex");

                    b.Property<DateTime>("OpTime");

                    b.Property<string>("AdminID")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<short>("OpCode");

                    b.Property<short?>("Reserve1");

                    b.Property<short?>("Reserve2");

                    b.Property<short?>("Reserve3");

                    b.Property<short?>("Reserve4");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("SerialNumber", "CompanyIndex", "OpTime");

                    b.ToTable("IC_OperationLog");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_PrivilegeDepartment", b =>
                {
                    b.Property<int>("PrivilegeIndex");

                    b.Property<int>("CompanyIndex");

                    b.Property<long>("DepartmentIndex");

                    b.Property<string>("Role")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("PrivilegeIndex", "CompanyIndex", "DepartmentIndex", "Role");

                    b.ToTable("IC_PrivilegeDepartment");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_PrivilegeDetails", b =>
                {
                    b.Property<int>("PrivilegeIndex");

                    b.Property<int>("CompanyIndex");

                    b.Property<string>("FormName")
                        .HasMaxLength(100);

                    b.Property<string>("Role")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("PrivilegeIndex", "CompanyIndex", "FormName", "Role");

                    b.ToTable("IC_PrivilegeDetails");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_PrivilegeDeviceDetails", b =>
                {
                    b.Property<int>("PrivilegeIndex");

                    b.Property<int>("CompanyIndex");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("PrivilegeIndex", "CompanyIndex", "SerialNumber", "Role");

                    b.ToTable("IC_PrivilegeDeviceDetails");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_RelayController", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("Port");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("Index");

                    b.ToTable("IC_RelayController");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_RelayControllerChannel", b =>
                {
                    b.Property<int>("RelayControllerIndex");

                    b.Property<short>("ChannelIndex");

                    b.Property<int>("CompanyIndex");

                    b.Property<int>("NumberOfSecondsOff");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("RelayControllerIndex", "ChannelIndex", "CompanyIndex");

                    b.ToTable("IC_RelayControllerChannel");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_Service", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("ServiceType")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("Index");

                    b.ToTable("IC_Service");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_ServiceAndDevices", b =>
                {
                    b.Property<int>("ServiceIndex");

                    b.Property<int>("CompanyIndex");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("ServiceIndex", "CompanyIndex", "SerialNumber");

                    b.ToTable("IC_ServiceAndDevices");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_SystemCommand", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Command")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CommandName")
                        .HasMaxLength(50);

                    b.Property<int>("CompanyIndex");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("EmployeeATIDs");

                    b.Property<string>("Error");

                    b.Property<bool>("Excuted");

                    b.Property<DateTime?>("ExcutedTime");

                    b.Property<int>("ExcutingServiceIndex");

                    b.Property<int>("GroupIndex");

                    b.Property<bool>("IsOrverwriteData");

                    b.Property<string>("Params");

                    b.Property<DateTime?>("RequestedTime");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("Index");

                    b.ToTable("IC_SystemCommand");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_UserAccount", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CompanyIndex");

                    b.Property<short>("AccountPrivilege");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<bool>("Disabled");

                    b.Property<DateTime?>("LockTo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("ResetPasswordCode")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("UserName", "CompanyIndex");

                    b.ToTable("IC_UserAccount");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_UserFaceMaster", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CompanyIndex");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<short>("FaceIndex");

                    b.Property<string>("FaceTemplate")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("IC_UserFaceMaster");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_UserFaceTemplate", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CompanyIndex");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<short>("FaceIndex");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("FaceTemplate")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("EmployeeATID", "CompanyIndex", "SerialNumber", "FaceIndex");

                    b.ToTable("IC_UserFaceTemplate");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_UserFaceTemplate_v2", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CompanyIndex");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int>("Duress");

                    b.Property<int>("Format");

                    b.Property<int>("Index");

                    b.Property<int>("MajorVer");

                    b.Property<int>("MinorVer");

                    b.Property<int>("No");

                    b.Property<int>("Size");

                    b.Property<string>("TemplateBIODATA")
                        .HasColumnType("text");

                    b.Property<int>("Type");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.Property<int>("Valid");

                    b.HasKey("EmployeeATID", "CompanyIndex", "SerialNumber");

                    b.ToTable("IC_UserFaceTemplate_v2");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_UserFaceV2Master", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CompanyIndex");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int>("Duress");

                    b.Property<int>("Format");

                    b.Property<int>("Index");

                    b.Property<int>("MajorVer");

                    b.Property<int>("MinorVer");

                    b.Property<int>("No");

                    b.Property<int>("Size");

                    b.Property<string>("TemplateBIODATA")
                        .HasColumnType("text");

                    b.Property<int>("Type");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.Property<int>("Valid");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("IC_UserFaceV2Master");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_UserFinger", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CompanyIndex");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<short>("FingerIndex");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("FingerData")
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("EmployeeATID", "CompanyIndex", "SerialNumber", "FingerIndex");

                    b.ToTable("IC_UserFinger");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_UserFingerMaster", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CompanyIndex");

                    b.Property<short>("FingerIndex");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("FingerData")
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("EmployeeATID", "CompanyIndex", "FingerIndex");

                    b.ToTable("IC_UserFingerMaster");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_UserInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CompanyIndex");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AuthenMode");

                    b.Property<string>("CardNumber")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int?>("FaceTemplate");

                    b.Property<int?>("FaceTemplateV2");

                    b.Property<int?>("FingerData0");

                    b.Property<int?>("FingerData1");

                    b.Property<int?>("FingerData2");

                    b.Property<int?>("FingerData3");

                    b.Property<int?>("FingerData4");

                    b.Property<int?>("FingerData5");

                    b.Property<int?>("FingerData6");

                    b.Property<int?>("FingerData7");

                    b.Property<int?>("FingerData8");

                    b.Property<int?>("FingerData9");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<short?>("Privilege");

                    b.Property<string>("Reserve1")
                        .HasMaxLength(50);

                    b.Property<int?>("Reserve2");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("VeinsData1");

                    b.Property<int?>("VeinsData2");

                    b.Property<int?>("VeinsData3");

                    b.HasKey("EmployeeATID", "CompanyIndex", "SerialNumber");

                    b.HasAlternateKey("CompanyIndex", "EmployeeATID", "SerialNumber");

                    b.ToTable("IC_UserInfo");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_UserMaster", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("CompanyIndex");

                    b.Property<string>("CardNumber")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<short?>("FaceIndex");

                    b.Property<string>("FaceTemplate")
                        .HasColumnType("text");

                    b.Property<string>("FaceV2_Content")
                        .HasColumnType("text");

                    b.Property<int?>("FaceV2_Duress");

                    b.Property<int?>("FaceV2_Format");

                    b.Property<int?>("FaceV2_Index");

                    b.Property<int?>("FaceV2_MajorVer");

                    b.Property<int?>("FaceV2_MinorVer");

                    b.Property<int?>("FaceV2_No");

                    b.Property<int?>("FaceV2_Size");

                    b.Property<string>("FaceV2_TemplateBIODATA")
                        .HasColumnType("text");

                    b.Property<int?>("FaceV2_Type");

                    b.Property<int?>("FaceV2_Valid");

                    b.Property<string>("FaceVersion");

                    b.Property<string>("FingerData0")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData1")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData2")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData3")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData4")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData5")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData6")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData7")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData8")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData9")
                        .HasColumnType("varchar(max)");

                    b.Property<short?>("FingerIndex");

                    b.Property<string>("FingerVersion");

                    b.Property<string>("NameOnMachine");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<short?>("Privilege")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("IC_UserMaster");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_UserNotification", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message");

                    b.Property<short>("Status");

                    b.Property<string>("Title");

                    b.Property<short>("Type");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Index");

                    b.ToTable("IC_UserNotification");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_UserPrivilege", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Note");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.Property<bool>("UseForDefault");

                    b.HasKey("Index");

                    b.ToTable("IC_UserPrivilege");
                });

            modelBuilder.Entity("EPAD_Backend_Core.Models.IC_WorkingInfo", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<string>("ApprovedUser")
                        .HasMaxLength(50);

                    b.Property<int>("CompanyIndex");

                    b.Property<int>("DepartmentIndex");

                    b.Property<string>("EmployeeATID")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("FromDate");

                    b.Property<bool>("IsManager");

                    b.Property<bool?>("IsSync");

                    b.Property<short>("Status");

                    b.Property<DateTime?>("ToDate");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50);

                    b.HasKey("Index");

                    b.ToTable("IC_WorkingInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
