// <auto-generated />
using System;
using EPAD_Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EPAD_Backend_Core.Migrations
{
    [DbContext(typeof(EPAD_Context))]
    [Migration("20240812105628_HR_CustomerInfo_Add_New_Field_Timestamp")]
    partial class HR_CustomerInfo_Add_New_Field_Timestamp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EPAD_Data.Entities.AC_AccGroup", b =>
                {
                    b.Property<int>("UID")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<int>("DoorIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TimeZoneString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Timezone")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ValidHoliday")
                        .HasColumnType("bit");

                    b.Property<int>("Verify")
                        .HasColumnType("int");

                    b.HasKey("UID");

                    b.ToTable("AC_AccGroup");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_AccHoliday", b =>
                {
                    b.Property<int>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<int>("DoorIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HolidayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HolidayType")
                        .HasColumnType("int");

                    b.Property<int>("HolidayUID")
                        .HasColumnType("int");

                    b.Property<bool>("Loop")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TimeZone")
                        .HasColumnType("int");

                    b.Property<int>("TimezoneRange")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UID");

                    b.ToTable("AC_AccHoliday");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_AccessedGroup", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("AC_AccessedGroup");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_Area", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("AC_Area");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_AreaAndDoor", b =>
                {
                    b.Property<int>("AreaIndex")
                        .HasColumnType("int");

                    b.Property<int>("DoorIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AreaIndex", "DoorIndex");

                    b.ToTable("AC_AreaAndDoor");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_AreaLimited", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoorIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("AC_AreaLimited");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_AreaLimitedAndDoor", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaLimited")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<int>("DoorIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("AC_AreaLimitedAndDoor");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_DepartmentAccessedGroup", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentIndex")
                        .HasColumnType("int");

                    b.Property<int>("GroupIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("AC_DepartmentAccessedGroup");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_Door", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<int>("DoorOpenTimezoneUID")
                        .HasColumnType("int");

                    b.Property<string>("DoorSettingDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Timezone")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isUsingGroup")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("AC_Door");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_DoorAndDevice", b =>
                {
                    b.Property<int>("DoorIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DoorIndex", "SerialNumber");

                    b.ToTable("AC_DoorAndDevice");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_StateLog", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alarm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Door")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sensor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Index");

                    b.ToTable("AC_StateLog");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_TimeZone", b =>
                {
                    b.Property<int>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FriEnd1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FriEnd2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FriEnd3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FriStart1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FriStart2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FriStart3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday1End1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday1End2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday1End3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday1Start1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday1Start2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday1Start3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday2End1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday2End2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday2End3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday2Start1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday2Start2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday2Start3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday3End1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday3End2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday3End3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday3Start1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday3Start2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Holiday3Start3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonEnd1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonEnd2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonEnd3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonStart1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonStart2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonStart3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SatEnd1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SatEnd2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SatEnd3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SatStart1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SatStart2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SatStart3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SunEnd1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SunEnd2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SunEnd3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SunStart1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SunStart2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SunStart3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThursEnd1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThursEnd2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThursEnd3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThursStart1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThursStart2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThursStart3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TuesEnd1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TuesEnd2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TuesEnd3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TuesStart1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TuesStart2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TuesStart3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UIDIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedEnd1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedEnd2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedEnd3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedStart1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedStart2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedStart3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UID");

                    b.ToTable("AC_TimeZone");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_UserMaster", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<int>("DoorIndex")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Operation")
                        .HasColumnType("int");

                    b.Property<int>("Timezone")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("AC_UserMaster");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_AccessedGroup", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GeneralAccessRuleIndex")
                        .HasColumnType("int");

                    b.Property<bool>("IsDriverDefaultGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGuestDefaultGroup")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameInEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ParkingLotRuleIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("GC_AccessedGroup");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_AreaGroup", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameInEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("GC_AreaGroup");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_AreaGroup_GroupDevice", b =>
                {
                    b.Property<int>("AreaGroupIndex")
                        .HasColumnType("int");

                    b.Property<int>("DeviceGroupIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AreaGroupIndex", "DeviceGroupIndex", "CompanyIndex");

                    b.ToTable("GC_AreaGroup_GroupDevice");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_BlackList", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEmployeeSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Nric")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonRemove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Index");

                    b.ToTable("GC_BlackList");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Customer", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccompanyingPersonList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BikeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BikeModel")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BikePlate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("BikeType")
                        .HasColumnType("smallint");

                    b.Property<string>("CardNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("ContactPersonATIDs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CustomerCompany")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CustomerFaceImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CustomerImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNRIC")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("DataStorageTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(18);

                    b.Property<string>("EmployeeATID")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ExtensionTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool?>("GoInSystem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVip")
                        .HasColumnType("bit");

                    b.Property<string>("LicensePlateBackImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicensePlateFrontImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRICBackImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRICFrontImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("NumberOfContactPerson")
                        .HasColumnType("smallint");

                    b.Property<string>("RegisterCode")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RulesCustomerIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WorkContent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("GC_Customer");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_CustomerVehicle", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeATID")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Plate")
                        .HasColumnType("nvarchar(30)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("GC_CustomerVehicle");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Department_AccessedGroup", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccessedGroupIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("GC_Department_AccessedGroup");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_EmployeeVehicle", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeATID")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Plate")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("RegistrationImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("StatusType")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VehicleImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("GC_EmployeeVehicle");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Employee_AccessedGroup", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccessedGroupIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeATID")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("GC_Employee_AccessedGroup");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Gates", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("GC_Gates");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Gates_Lines", b =>
                {
                    b.Property<int>("GateIndex")
                        .HasColumnType("int");

                    b.Property<int>("LineIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GateIndex", "LineIndex", "CompanyIndex");

                    b.ToTable("GC_Gates_Lines");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Lines", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<bool>("LineForCustomer")
                        .HasColumnType("bit");

                    b.Property<bool>("LineForCustomerIssuanceReturnCard")
                        .HasColumnType("bit");

                    b.Property<bool>("LineForDriver")
                        .HasColumnType("bit");

                    b.Property<bool>("LineForDriverIssuanceReturnCard")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("GC_Lines");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Lines_CheckInCamera", b =>
                {
                    b.Property<int>("LineIndex")
                        .HasColumnType("int");

                    b.Property<int>("CameraIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LineIndex", "CameraIndex", "CompanyIndex");

                    b.ToTable("GC_Lines_CheckInCamera");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Lines_CheckInDevice", b =>
                {
                    b.Property<int>("LineIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("CheckInDeviceSerial")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LineIndex", "CompanyIndex", "CheckInDeviceSerial");

                    b.ToTable("GC_Lines_CheckInDevice");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Lines_CheckInRelayController", b =>
                {
                    b.Property<int>("LineIndex")
                        .HasColumnType("int");

                    b.Property<int>("RelayControllerIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<short>("FailAlarmChannelIndex")
                        .HasColumnType("smallint");

                    b.Property<short>("OpenDoorChannelIndex")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LineIndex", "RelayControllerIndex", "CompanyIndex");

                    b.ToTable("GC_Lines_CheckInRelayController");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Lines_CheckOutCamera", b =>
                {
                    b.Property<int>("LineIndex")
                        .HasColumnType("int");

                    b.Property<int>("CameraIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LineIndex", "CameraIndex", "CompanyIndex");

                    b.ToTable("GC_Lines_CheckOutCamera");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Lines_CheckOutDevice", b =>
                {
                    b.Property<int>("LineIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("CheckOutDeviceSerial")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LineIndex", "CompanyIndex", "CheckOutDeviceSerial");

                    b.ToTable("GC_Lines_CheckOutDevice");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Lines_CheckOutRelayController", b =>
                {
                    b.Property<int>("LineIndex")
                        .HasColumnType("int");

                    b.Property<int>("RelayControllerIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<short>("FailAlarmChannelIndex")
                        .HasColumnType("smallint");

                    b.Property<short>("OpenDoorChannelIndex")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LineIndex", "RelayControllerIndex", "CompanyIndex");

                    b.ToTable("GC_Lines_CheckOutRelayController");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_ParkingLot", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameInEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("GC_ParkingLot");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_ParkingLotAccessed", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("AccessType")
                        .HasColumnType("smallint");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("CustomerIndex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EmployeeATID")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ParkingLotIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Index");

                    b.ToTable("GC_ParkingLotAccessed");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_ParkingLotDetail", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<int>("GateIndex")
                        .HasColumnType("int");

                    b.Property<int>("LineIndex")
                        .HasColumnType("int");

                    b.Property<int>("ParkingLotIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("GC_ParkingLotDetail");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Rules_Customer", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameInEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short>("NumberOfConnect")
                        .HasColumnType("smallint");

                    b.Property<int>("NumberOfDaysForSaveData")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("UseDefault")
                        .HasColumnType("bit");

                    b.HasKey("Index");

                    b.ToTable("GC_Rules_Customer");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Rules_Customer_Gates", b =>
                {
                    b.Property<int>("RulesCustomerIndex")
                        .HasColumnType("int");

                    b.Property<int>("GateIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("LineIndexs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RulesCustomerIndex", "GateIndex", "CompanyIndex");

                    b.ToTable("GC_Rules_Customer_Gates");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Rules_General", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IgnoreInLog")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBypassRule")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsing")
                        .HasColumnType("bit");

                    b.Property<int>("MaxAttendanceTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameInEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PresenceTrackingTime")
                        .HasColumnType("int");

                    b.Property<bool>("RunWithoutScreen")
                        .HasColumnType("bit");

                    b.Property<string>("StartTimeDay")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("GC_Rules_General");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Rules_GeneralAccess", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AdjustByLateInEarlyOut")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowCheckOutInWorkingTime")
                        .HasColumnType("bit");

                    b.Property<string>("AllowCheckOutInWorkingTimeRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AllowEarlyOutLateInMission")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowFreeInAndOutInTimeRange")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowInBreakTime")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowInLeaveDay")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowInMission")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BeginLastHaftTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CheckInByShift")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("CheckLogByAreaGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckLogByShift")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckOutByShift")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CheckOutTime")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DenyInLeaveWholeDay")
                        .HasColumnType("bit");

                    b.Property<bool>("DenyInMissionWholeDay")
                        .HasColumnType("bit");

                    b.Property<bool>("DenyInStoppedWorkingInfo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EndFirstHaftTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxEarlyCheckInMinute")
                        .HasColumnType("int");

                    b.Property<int>("MaxEarlyCheckOutMinute")
                        .HasColumnType("int");

                    b.Property<int>("MaxLateCheckInMinute")
                        .HasColumnType("int");

                    b.Property<int>("MaxLateCheckOutMinute")
                        .HasColumnType("int");

                    b.Property<int>("MaxMinuteAllowOutsideInWorkingTime")
                        .HasColumnType("int");

                    b.Property<int>("MissionMaxEarlyCheckOutMinute")
                        .HasColumnType("int");

                    b.Property<int>("MissionMaxLateCheckInMinute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameInEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("UseDefault")
                        .HasColumnType("bit");

                    b.HasKey("Index");

                    b.ToTable("GC_Rules_GeneralAccess");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Rules_GeneralAccess_Gates", b =>
                {
                    b.Property<int>("RulesGeneralIndex")
                        .HasColumnType("int");

                    b.Property<int>("GateIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("LineIndexs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RulesGeneralIndex", "GateIndex", "CompanyIndex");

                    b.ToTable("GC_Rules_GeneralAccess_Gates");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Rules_General_AreaGroup", b =>
                {
                    b.Property<int>("AreaGroupIndex")
                        .HasColumnType("int");

                    b.Property<int>("Rules_GeneralIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AreaGroupIndex", "Rules_GeneralIndex", "CompanyIndex");

                    b.ToTable("GC_Rules_General_AreaGroup");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Rules_General_Log", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaGroupIndex")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FromEarlyDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromIsNextDay")
                        .HasColumnType("bit");

                    b.Property<int>("MinimumLog")
                        .HasColumnType("int");

                    b.Property<int>("RuleGeneralIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ToIsNextDay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ToLateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ToLateIsNextDay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("UseDeviceMode")
                        .HasColumnType("bit");

                    b.Property<bool>("UseMinimumLog")
                        .HasColumnType("bit");

                    b.Property<int>("UseMode")
                        .HasColumnType("int");

                    b.Property<bool>("UseSequenceLog")
                        .HasColumnType("bit");

                    b.Property<bool>("UseTimeLog")
                        .HasColumnType("bit");

                    b.HasKey("Index");

                    b.ToTable("GC_Rules_General_Log");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Rules_ParkingLot", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LimitDayNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameInEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("UseCardDependent")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseRequiredEmployeeVehicle")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseRequiredParkingLotAccessed")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseTimeLimitParking")
                        .HasColumnType("bit");

                    b.HasKey("Index");

                    b.ToTable("GC_Rules_ParkingLot");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Rules_Warning", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("ComputerSoundPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<short?>("EmailSendType")
                        .HasColumnType("smallint");

                    b.Property<int>("RulesWarningGroupIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("UseChangeColor")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseComputerSound")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseEmail")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseLed")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseLedFocus")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseLedInPlace")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseSpeaker")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseSpeakerFocus")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseSpeakerInPlace")
                        .HasColumnType("bit");

                    b.HasKey("Index");

                    b.ToTable("GC_Rules_Warning");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Rules_WarningGroup", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("GC_Rules_WarningGroup");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Rules_Warning_ControllerChannel", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChannelIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<int>("ControllerIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GateIndex")
                        .HasColumnType("int");

                    b.Property<int?>("LineIndex")
                        .HasColumnType("int");

                    b.Property<int>("RulesWarningIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("GC_Rules_Warning_ControllerChannels");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_Rules_Warning_EmailSchedule", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayOfWeekIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LatestDateSendMail")
                        .HasColumnType("datetime2");

                    b.Property<int>("RulesWarningIndex")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.HasAlternateKey("Time", "CompanyIndex", "DayOfWeekIndex", "RulesWarningIndex");

                    b.ToTable("GC_Rules_Warning_EmailSchedules");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_TimeLog", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("MachineSerial")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Action")
                        .HasColumnType("varchar(5)");

                    b.Property<short>("ApproveStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerIndex")
                        .HasColumnType("int");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ExtendData")
                        .HasColumnType("ntext");

                    b.Property<int>("GateIndex")
                        .HasColumnType("int");

                    b.Property<short?>("InOutMode")
                        .HasColumnType("smallint");

                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsException")
                        .HasColumnType("bit");

                    b.Property<int>("LeaveType")
                        .HasColumnType("int");

                    b.Property<int>("LineIndex")
                        .HasColumnType("int");

                    b.Property<string>("LogType")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ObjectAccessType")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PlatesRegistered")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReasonException")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("SpecifiedMode")
                        .HasColumnType("smallint");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("SystemTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifyMode")
                        .HasColumnType("varchar(100)");

                    b.HasKey("EmployeeATID", "CompanyIndex", "Time", "MachineSerial");

                    b.ToTable("GC_TimeLog");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_TimeLog_Image", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Image1")
                        .HasColumnType("text");

                    b.Property<string>("Image2")
                        .HasColumnType("text");

                    b.Property<string>("Image3")
                        .HasColumnType("text");

                    b.Property<string>("Image4")
                        .HasColumnType("text");

                    b.Property<string>("Image5")
                        .HasColumnType("text");

                    b.Property<string>("Info1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Info2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Info3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Info4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Info5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("TimeLogIndex")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("GC_TimeLog_Image");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_TruckDriverLog", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("InOutMode")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsException")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("MachineSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonException")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("TripCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("GC_TruckDriverLog");
                });

            modelBuilder.Entity("EPAD_Data.Entities.GC_TruckExtraDriverLog", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraDriverCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraDriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("TripCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("GC_TruckExtraDriverLog");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR.HR_GradeInfo", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Index");

                    b.ToTable("HR_GradeInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR.HR_PositionInfo", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameInEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Index", "CompanyIndex");

                    b.ToTable("HR_PositionInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR.HR_Rules_InOutTime", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckOutTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBoarding")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDayBoarding")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSession")
                        .HasColumnType("bit");

                    b.Property<int>("MaxEarlyCheckInMinute")
                        .HasColumnType("int");

                    b.Property<int>("MaxEarlyCheckOutMinute")
                        .HasColumnType("int");

                    b.Property<int>("MaxLateCheckInMinute")
                        .HasColumnType("int");

                    b.Property<int>("MaxLateCheckOutMinute")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Index");

                    b.ToTable("HR_Rules_InOutTime");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR.HR_TeamInfo", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Index");

                    b.ToTable("HR_TeamInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR.HR_UserContactInfo", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserIndex")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index", "CompanyIndex");

                    b.ToTable("HR_UserContactInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR.HR_UserType", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EnglishName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("IsEmployee")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<short>("Order")
                        .HasColumnType("smallint");

                    b.Property<short>("StatusId")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("UserTypeId")
                        .HasColumnType("smallint");

                    b.HasKey("Index", "CompanyIndex");

                    b.ToTable("HR_UserType");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_CardNumberInfo", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardNumber")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("HR_CardNumberInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_ClassInfo", b =>
                {
                    b.Property<string>("Index")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("GradeIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameInEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Index", "CompanyIndex");

                    b.ToTable("HR_ClassInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_ContractorInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Company")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NRIC")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("HR_ContractorInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_CustomerCard", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Index");

                    b.ToTable("HR_CustomerCard");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_CustomerInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("AccompanyingPersonList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BikeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BikeModel")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BikePlate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("BikeType")
                        .HasColumnType("smallint");

                    b.Property<string>("Company")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContactDepartment")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPersonATIDs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("DataStorageTime")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ExtensionTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("GoInSystem")
                        .HasColumnType("bit");

                    b.Property<byte[]>("IdentityImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsAllowPhone")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVIP")
                        .HasColumnType("bit");

                    b.Property<string>("LicensePlateBackImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicensePlateFrontImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRIC")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NRICBackImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRICFrontImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("NumberOfContactPerson")
                        .HasColumnType("smallint");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RegisterCode")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RulesCustomerIndex")
                        .HasColumnType("int");

                    b.Property<string>("StudentOfParent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WorkContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingContent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("HR_CustomerInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_DormActivity", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Index");

                    b.ToTable("HR_DormActivity");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_DormLeaveType", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Index");

                    b.ToTable("HR_DormLeaveType");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_DormRation", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Index");

                    b.ToTable("HR_DormRation");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_DormRegister", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DormEmployeeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DormLeaveIndex")
                        .HasColumnType("int");

                    b.Property<int>("DormRoomIndex")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("StayInDorm")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Index");

                    b.ToTable("HR_DormRegister");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_DormRegister_Activity", b =>
                {
                    b.Property<int>("DormRegisterIndex")
                        .HasColumnType("int");

                    b.Property<int>("DormActivityIndex")
                        .HasColumnType("int");

                    b.Property<int>("DormAccessMode")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("DormRegisterIndex", "DormActivityIndex", "DormAccessMode");

                    b.ToTable("HR_DormRegister_Activity");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_DormRegister_Ration", b =>
                {
                    b.Property<int>("DormRegisterIndex")
                        .HasColumnType("int");

                    b.Property<int>("DormRationIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("DormRegisterIndex", "DormRationIndex");

                    b.ToTable("HR_DormRegister_Ration");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_DormRoom", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FloorLevelIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Index");

                    b.ToTable("HR_DormRoom");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_EmployeeInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("HR_EmployeeInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_ExcusedAbsent", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AbsentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExcusedAbsentReasonIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Index");

                    b.ToTable("HR_ExcusedAbsent");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_ExcusedAbsentReason", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Index");

                    b.ToTable("HR_ExcusedAbsentReason");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_ExcusedLateEntry", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Index");

                    b.ToTable("HR_ExcusedLateEntry");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_FloorLevel", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Index");

                    b.ToTable("HR_FloorLevel");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_NannyInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("ClassID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("HR_NannyInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_ParentInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Students")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("HR_ParentInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_Rules_InOutTimeDetail", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxEarlyCheckInMinute")
                        .HasColumnType("int");

                    b.Property<int>("MaxEarlyCheckOutMinute")
                        .HasColumnType("int");

                    b.Property<int>("MaxLateCheckInMinute")
                        .HasColumnType("int");

                    b.Property<int>("MaxLateCheckOutMinute")
                        .HasColumnType("int");

                    b.Property<int>("RulesIndex")
                        .HasColumnType("int");

                    b.Property<int>("TypeRules")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("HR_Rules_InOutTimeDetail");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_StudentClassInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TeacherID")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClassInfoIndex")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NannyID")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeATID", "TeacherID", "ClassInfoIndex");

                    b.ToTable("HR_StudentClassInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_StudentInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("ClassID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("HR_StudentInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_StudentsAccordingToTheRegimen", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModeIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Index");

                    b.ToTable("HR_StudentsAccordingToTheRegimen");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_TeacherInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("ClassID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("HR_TeacherInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_User", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DayOfBirth")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EmployeeType")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeTypeIndex")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short?>("Gender")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsAllowPhone")
                        .HasColumnType("bit");

                    b.Property<int?>("MonthOfBirth")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nric")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearOfBirth")
                        .HasColumnType("int");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("HR_User");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_User_Note", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeATID");

                    b.ToTable("HR_User_Note");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_AccessToken", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Scope")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_AccessToken");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_AppLicense", b =>
                {
                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PublicKey")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CompanyIndex");

                    b.ToTable("IC_AppLicense");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_AttendanceLog", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("AccessDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AccessTime")
                        .HasColumnType("datetime2");

                    b.Property<double?>("BodyTemperature")
                        .HasColumnType("float");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeviceNumber")
                        .HasColumnType("int");

                    b.Property<int?>("FaceMask")
                        .HasColumnType("int");

                    b.Property<string>("Function")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("InOutMode")
                        .HasColumnType("smallint");

                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsSend")
                        .HasColumnType("bit");

                    b.Property<int?>("Reserve1")
                        .HasColumnType("int");

                    b.Property<string>("RoomCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("VerifyMode")
                        .HasColumnType("smallint");

                    b.Property<int?>("WorkCode")
                        .HasColumnType("int");

                    b.HasKey("EmployeeATID", "CompanyIndex", "CheckTime", "SerialNumber");

                    b.ToTable("IC_AttendanceLog");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_AttendanceLogClassRoom", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoomId")
                        .HasColumnType("varchar(150)");

                    b.Property<double?>("BodyTemperature")
                        .HasColumnType("float");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FaceMask")
                        .HasColumnType("int");

                    b.Property<string>("Function")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("InOutMode")
                        .HasColumnType("smallint");

                    b.Property<int?>("Reserve1")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("VerifyMode")
                        .HasColumnType("smallint");

                    b.Property<int?>("WorkCode")
                        .HasColumnType("int");

                    b.HasKey("EmployeeATID", "CompanyIndex", "CheckTime", "RoomId");

                    b.ToTable("IC_AttendanceLogClassRoom");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_AttendancelogIntegrate", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AccessDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AccessTime")
                        .HasColumnType("datetime2");

                    b.Property<double?>("BodyTemperature")
                        .HasColumnType("float");

                    b.Property<DateTime>("CheckTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeviceNumber")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("FaceMask")
                        .HasColumnType("int");

                    b.Property<string>("Function")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("InOutMode")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsSend")
                        .HasColumnType("bit");

                    b.Property<int?>("Reserve1")
                        .HasColumnType("int");

                    b.Property<string>("RoomCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("VerifyMode")
                        .HasColumnType("smallint");

                    b.Property<int?>("WorkCode")
                        .HasColumnType("int");

                    b.HasKey("Index");

                    b.ToTable("IC_AttendancelogIntegrate");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Audit", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DescriptionEn")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("IC_SystemCommandIndex")
                        .HasColumnType("int");

                    b.Property<string>("KeyValues")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumFailure")
                        .HasColumnType("int");

                    b.Property<int?>("NumSuccess")
                        .HasColumnType("int");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageName")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Index");

                    b.HasIndex("IC_SystemCommandIndex");

                    b.ToTable("IC_Audit");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Camera", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("Serial")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Camera");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Command", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Command")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CommandName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CommandType")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Excuted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ExcutedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RequestedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Command");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_CommandSystemGroup", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Excuted")
                        .HasColumnType("bit");

                    b.Property<string>("ExternalData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_CommandSystemGroup");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Company", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Company");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Config", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AlwaysSend")
                        .HasColumnType("bit");

                    b.Property<string>("BodyEmailError")
                        .HasColumnType("ntext");

                    b.Property<string>("BodyEmailSuccess")
                        .HasColumnType("ntext");

                    b.Property<double?>("BodyTemperature")
                        .HasColumnType("float");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("CustomField")
                        .HasColumnType("ntext");

                    b.Property<string>("Email")
                        .HasColumnType("ntext");

                    b.Property<string>("EventType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PreviousDays")
                        .HasColumnType("int");

                    b.Property<string>("ProceedAfterEvent")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("SendMailWhenError")
                        .HasColumnType("bit");

                    b.Property<string>("TimePos")
                        .HasColumnType("ntext");

                    b.Property<string>("TitleEmailError")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TitleEmailSuccess")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Config");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_ConfigByGroupMachine", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AlwaysSend")
                        .HasColumnType("bit");

                    b.Property<string>("BodyEmailError")
                        .HasColumnType("ntext");

                    b.Property<string>("BodyEmailSuccess")
                        .HasColumnType("ntext");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("CustomField")
                        .HasColumnType("ntext");

                    b.Property<string>("Email")
                        .HasColumnType("ntext");

                    b.Property<string>("EventType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GroupDeviceIndex")
                        .HasColumnType("int");

                    b.Property<int?>("PreviousDays")
                        .HasColumnType("int");

                    b.Property<string>("ProceedAfterEvent")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("SendMailWhenError")
                        .HasColumnType("bit");

                    b.Property<string>("TimePos")
                        .HasColumnType("ntext");

                    b.Property<string>("TitleEmailError")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TitleEmailSuccess")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_ConfigByGroupMachine");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Controller", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDController")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Controller");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Dashboard", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DashboardConfig")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("IC_Dashboard");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_DepartmemtAEONSync", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool?>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStore")
                        .HasColumnType("bit");

                    b.Property<int?>("JobGradeGrade")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OVNID")
                        .HasColumnType("int");

                    b.Property<int?>("OrgUnitID")
                        .HasColumnType("int");

                    b.Property<int?>("OrgUnitParentNode")
                        .HasColumnType("int");

                    b.Property<string>("ParentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentIndex")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_DepartmemtAEONSync");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Department", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool?>("IsContractorDepartment")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDriverDepartment")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStore")
                        .HasColumnType("bit");

                    b.Property<int?>("JobGradeGrade")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OVNID")
                        .HasColumnType("int");

                    b.Property<int?>("OrgUnitID")
                        .HasColumnType("int");

                    b.Property<int?>("OrgUnitParentNode")
                        .HasColumnType("int");

                    b.Property<string>("ParentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentIndex")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Department");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_DepartmentAndDevice", b =>
                {
                    b.Property<int>("DepartmentIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DepartmentIndex", "SerialNumber", "CompanyIndex");

                    b.ToTable("IC_DepartmentAndDevice");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Device", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("ATTLOGStamp")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ATTPHOTOStamp")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AdminCount")
                        .HasColumnType("int");

                    b.Property<string>("AliasName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("AttendanceLogCapacity")
                        .HasColumnType("int");

                    b.Property<int?>("AttendanceLogCount")
                        .HasColumnType("int");

                    b.Property<string>("ConnectionCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Delay")
                        .HasColumnType("int");

                    b.Property<string>("DeviceId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeviceModel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeviceModule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DeviceNumber")
                        .HasColumnType("int");

                    b.Property<int?>("DeviceStatus")
                        .HasColumnType("int");

                    b.Property<int?>("DeviceType")
                        .HasColumnType("int");

                    b.Property<short?>("Encrypt")
                        .HasColumnType("smallint");

                    b.Property<int?>("ErrorDelay")
                        .HasColumnType("int");

                    b.Property<string>("FINGERTMPStamp")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("FaceCapacity")
                        .HasColumnType("int");

                    b.Property<int?>("FaceCount")
                        .HasColumnType("int");

                    b.Property<int?>("FingerCapacity")
                        .HasColumnType("int");

                    b.Property<int?>("FingerCount")
                        .HasColumnType("int");

                    b.Property<string>("FirmwareVersion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsSendMailLastDisconnect")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsingOffline")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastConnection")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OPERLOGStamp")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("OpStamp")
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("OperationLogCount")
                        .HasColumnType("int");

                    b.Property<int>("ParkingType")
                        .HasColumnType("int");

                    b.Property<string>("PhotoStamp")
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("Port")
                        .HasColumnType("int");

                    b.Property<int?>("Realtime")
                        .HasColumnType("int");

                    b.Property<string>("Reserve1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reserve2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Reserve3")
                        .HasColumnType("int");

                    b.Property<string>("SMSStamp")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Stamp")
                        .HasColumnType("varchar(15)");

                    b.Property<short?>("TimeZoneclock")
                        .HasColumnType("smallint");

                    b.Property<string>("TransFlag")
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("TransInterval")
                        .HasColumnType("int");

                    b.Property<string>("TransTimes")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("USERINFOStamp")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("USER_SMSStamp")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("UsePush")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseSDK")
                        .HasColumnType("bit");

                    b.Property<int?>("UserCapacity")
                        .HasColumnType("int");

                    b.Property<int?>("UserCount")
                        .HasColumnType("int");

                    b.HasKey("SerialNumber", "CompanyIndex");

                    b.ToTable("IC_Device");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_DeviceHistory", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Index");

                    b.ToTable("IC_DeviceHistory");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_EmployeeStopped", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StoppedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Index");

                    b.ToTable("IC_EmployeeStopped");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_EmployeeTransfer", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<int>("NewDepartment")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("AddOnNewDepartment")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool?>("IsSync")
                        .HasColumnType("bit");

                    b.Property<long?>("OldDepartment")
                        .HasColumnType("bigint");

                    b.Property<bool>("RemoveFromOldDepartment")
                        .HasColumnType("bit");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("ToTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex", "NewDepartment", "FromTime");

                    b.ToTable("IC_EmployeeTransfer");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_EmployeeType", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsUsing")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameInEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Index");

                    b.ToTable("IC_EmployeeType");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Employee_Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IC_ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShiftApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShiftFromTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShiftToTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IC_ShiftId");

                    b.ToTable("IC_Employee_Shift");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_GroupDevice", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_GroupDevice");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_GroupDeviceDetails", b =>
                {
                    b.Property<int>("GroupDeviceIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GroupDeviceIndex", "CompanyIndex", "SerialNumber");

                    b.ToTable("IC_GroupDeviceDetails");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_HardwareLicense", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("FileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_HardwareLicense");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_HistoryTrackingIntegrate", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<int>("DataDelete")
                        .HasColumnType("int");

                    b.Property<int>("DataNew")
                        .HasColumnType("int");

                    b.Property<int>("DataUpdate")
                        .HasColumnType("int");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RunTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Index");

                    b.ToTable("IC_HistoryTrackingIntegrate");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_LocationOperator", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("IC_LocationOperator");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_MailHistory", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<string>("Content")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailTo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Times")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Index");

                    b.ToTable("IC_MailHistory");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_OperationLog", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("OpTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("AdminID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("OpCode")
                        .HasColumnType("smallint");

                    b.Property<short?>("Reserve1")
                        .HasColumnType("smallint");

                    b.Property<short?>("Reserve2")
                        .HasColumnType("smallint");

                    b.Property<short?>("Reserve3")
                        .HasColumnType("smallint");

                    b.Property<short?>("Reserve4")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SerialNumber", "CompanyIndex", "OpTime");

                    b.ToTable("IC_OperationLog");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_PlanDock", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Eta")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocationFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusDock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("TimesDock")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrailerNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Vc")
                        .HasColumnType("bit");

                    b.HasKey("Index");

                    b.ToTable("IC_PlanDock");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Printer", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("PrinterModel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Printer");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_PrivilegeDepartment", b =>
                {
                    b.Property<int>("PrivilegeIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<long>("DepartmentIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PrivilegeIndex", "CompanyIndex", "DepartmentIndex", "Role");

                    b.ToTable("IC_PrivilegeDepartment");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_PrivilegeDetails", b =>
                {
                    b.Property<int>("PrivilegeIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("FormName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PrivilegeIndex", "CompanyIndex", "FormName");

                    b.ToTable("IC_PrivilegeDetails");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_PrivilegeDeviceDetails", b =>
                {
                    b.Property<int>("PrivilegeIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PrivilegeIndex", "CompanyIndex", "SerialNumber", "Role");

                    b.ToTable("IC_PrivilegeDeviceDetails");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_PrivilegeMachineRealtime", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceModule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeviceSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupDeviceIndex")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short>("PrivilegeGroup")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_PrivilegeMachineRealtime");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_RegisterCard", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("Index");

                    b.ToTable("IC_RegisterCard");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_RelayController", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("RelayType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SignalType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_RelayController");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_RelayControllerChannel", b =>
                {
                    b.Property<int>("RelayControllerIndex")
                        .HasColumnType("int");

                    b.Property<short>("ChannelIndex")
                        .HasColumnType("smallint");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<int>("SignalType")
                        .HasColumnType("int");

                    b.Property<double>("NumberOfSecondsOff")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RelayControllerIndex", "ChannelIndex", "CompanyIndex", "SignalType");

                    b.ToTable("IC_RelayControllerChannel");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Service", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ServiceType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Service");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_ServiceAndDevices", b =>
                {
                    b.Property<int>("ServiceIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ServiceIndex", "CompanyIndex", "SerialNumber");

                    b.ToTable("IC_ServiceAndDevices");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("IC_Shift");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_StatusDock", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("IC_StatusDock");

                    b.HasData(
                        new
                        {
                            Key = "0001",
                            Name = "Đăng tài"
                        },
                        new
                        {
                            Key = "0002",
                            Name = "Xe vào cổng"
                        },
                        new
                        {
                            Key = "0003",
                            Name = "Xe ra cổng"
                        });
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_SystemCommand", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Command")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CommandName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeATIDs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Excuted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ExcutedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExcutingServiceIndex")
                        .HasColumnType("int");

                    b.Property<int>("GroupIndex")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOverwriteData")
                        .HasColumnType("bit");

                    b.Property<string>("Params")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_SystemCommand");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_UserAccount", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<short>("AccountPrivilege")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("LockTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ResetPasswordCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserName", "CompanyIndex");

                    b.ToTable("IC_UserAccount");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_UserFaceTemplate", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<short>("FaceIndex")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FaceTemplate")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex", "SerialNumber", "FaceIndex");

                    b.ToTable("IC_UserFaceTemplate");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_UserFaceTemplate_v2", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duress")
                        .HasColumnType("int");

                    b.Property<int>("Format")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int>("MajorVer")
                        .HasColumnType("int");

                    b.Property<int>("MinorVer")
                        .HasColumnType("int");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("TemplateBIODATA")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Valid")
                        .HasColumnType("int");

                    b.HasKey("EmployeeATID", "CompanyIndex", "SerialNumber");

                    b.ToTable("IC_UserFaceTemplate_v2");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_UserFinger", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<short>("FingerIndex")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FingerData")
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex", "SerialNumber", "FingerIndex");

                    b.ToTable("IC_UserFinger");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_UserInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AuthenMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FaceTemplate")
                        .HasColumnType("int");

                    b.Property<int?>("FaceTemplateV2")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData0")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData1")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData2")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData3")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData4")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData5")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData6")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData7")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData8")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData9")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<short?>("Privilege")
                        .HasColumnType("smallint");

                    b.Property<string>("Reserve1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Reserve2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("VeinsData1")
                        .HasColumnType("int");

                    b.Property<int?>("VeinsData2")
                        .HasColumnType("int");

                    b.Property<int?>("VeinsData3")
                        .HasColumnType("int");

                    b.HasKey("EmployeeATID", "CompanyIndex", "SerialNumber");

                    b.ToTable("IC_UserInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_UserMaster", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("AuthenMode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("FaceIndex")
                        .HasColumnType("smallint");

                    b.Property<string>("FaceTemplate")
                        .HasColumnType("text");

                    b.Property<string>("FaceV2_Content")
                        .HasColumnType("text");

                    b.Property<int?>("FaceV2_Duress")
                        .HasColumnType("int");

                    b.Property<int?>("FaceV2_Format")
                        .HasColumnType("int");

                    b.Property<int?>("FaceV2_Index")
                        .HasColumnType("int");

                    b.Property<int?>("FaceV2_MajorVer")
                        .HasColumnType("int");

                    b.Property<int?>("FaceV2_MinorVer")
                        .HasColumnType("int");

                    b.Property<int?>("FaceV2_No")
                        .HasColumnType("int");

                    b.Property<int?>("FaceV2_Size")
                        .HasColumnType("int");

                    b.Property<string>("FaceV2_TemplateBIODATA")
                        .HasColumnType("text");

                    b.Property<int?>("FaceV2_Type")
                        .HasColumnType("int");

                    b.Property<int?>("FaceV2_Valid")
                        .HasColumnType("int");

                    b.Property<string>("FaceVersion")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FingerData0")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData1")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData2")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData3")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData4")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData5")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData6")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData7")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData8")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData9")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerVersion")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NameOnMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<short?>("Privilege")
                        .HasMaxLength(200)
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("IC_UserMaster");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_UserNotification", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Index");

                    b.ToTable("IC_UserNotification");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_UserPrivilege", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("UseForDefault")
                        .HasColumnType("bit");

                    b.HasKey("Index");

                    b.ToTable("IC_UserPrivilege");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_VehicleLog", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ComputerIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComputerOut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IntegrateId")
                        .HasColumnType("int");

                    b.Property<string>("IntegrateString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDelete")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("Index");

                    b.ToTable("IC_VehicleLog");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_WorkingInfo", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<long>("DepartmentIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("EmployeeATID")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsManager")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSync")
                        .HasColumnType("bit");

                    b.Property<long>("PositionIndex")
                        .HasColumnType("bigint");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<int?>("TeamIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_WorkingInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.TA_AjustAttendanceLog", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("InOutMode")
                        .HasColumnType("smallint");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Operate")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProcessedCheckTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RawCheckTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("VerifyMode")
                        .HasColumnType("smallint");

                    b.HasKey("Index");

                    b.ToTable("TA_AjustAttendanceLog");
                });

            modelBuilder.Entity("EPAD_Data.Entities.TA_AjustAttendanceLogHistory", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("InOutMode")
                        .HasColumnType("smallint");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Operate")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProcessedCheckTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RawCheckTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("VerifyMode")
                        .HasColumnType("smallint");

                    b.HasKey("Index");

                    b.ToTable("TA_AjustAttendanceLogHistory");
                });

            modelBuilder.Entity("EPAD_Data.Entities.TA_AjustTimeAttendanceLog", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("TA_AjustTimeAttendanceLog");
                });

            modelBuilder.Entity("EPAD_Data.Entities.TA_AnnualLeave", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AnnualLeave")
                        .HasColumnType("float");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("TA_AnnualLeave");
                });

            modelBuilder.Entity("EPAD_Data.Entities.TA_BusinessRegistration", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BusinessDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BusinessType")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkPlace")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("TA_BusinessRegistration");
                });

            modelBuilder.Entity("EPAD_Data.Entities.TA_EmployeeShift", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("TA_EmployeeShift");
                });

            modelBuilder.Entity("EPAD_Data.Entities.TA_Holiday", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("HolidayDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPaidWhenNotWorking")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRepeatAnnually")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("TA_Holiday");
                });

            modelBuilder.Entity("EPAD_Data.Entities.TA_LeaveDateType", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<bool>("IsOptionHoliday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaidLeave")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkedTimeHoliday")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("TA_LeaveDateType");
                });

            modelBuilder.Entity("EPAD_Data.Entities.TA_LeaveRegistration", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HaftLeaveType")
                        .HasColumnType("int");

                    b.Property<DateTime>("LeaveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaveDateType")
                        .HasColumnType("int");

                    b.Property<int>("LeaveDurationType")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("TA_LeaveRegistration");
                });

            modelBuilder.Entity("EPAD_Data.Entities.TA_Rules_Global", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<bool>("IsAutoCalculateAttendance")
                        .HasColumnType("bit");

                    b.Property<int>("LockAttendanceTime")
                        .HasColumnType("int");

                    b.Property<int?>("MaximumAnnualLeaveRegisterByMonth")
                        .HasColumnType("int");

                    b.Property<int>("NightOverTimeHoliday")
                        .HasColumnType("int");

                    b.Property<int>("NightOverTimeLeaveDay")
                        .HasColumnType("int");

                    b.Property<int>("NightOverTimeNormalDay")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NightShiftEndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("NightShiftOvernightEndTime")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NightShiftStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OverTimeHoliday")
                        .HasColumnType("int");

                    b.Property<int>("OverTimeLeaveDay")
                        .HasColumnType("int");

                    b.Property<int>("OverTimeNormalDay")
                        .HasColumnType("int");

                    b.Property<string>("TimePos")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("TA_Rules_Global");
                });

            modelBuilder.Entity("EPAD_Data.Entities.TA_Rules_Shift", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowedDoNotAttendance")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckOutOvernightTime")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EarliestAttendanceRangeTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EarlyCheckOutMinutes")
                        .HasColumnType("int");

                    b.Property<int?>("LateCheckInMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime>("LatestAttendanceRangeTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaximumAnnualLeaveRegisterByMonth")
                        .HasColumnType("int");

                    b.Property<int?>("MaximumAnnualLeaveRegisterByYear")
                        .HasColumnType("int");

                    b.Property<int?>("MissingCheckInAttendanceLogIs")
                        .HasColumnType("int");

                    b.Property<int?>("MissingCheckOutAttendanceLogIs")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RoundingOTTime")
                        .HasColumnType("bit");

                    b.Property<int?>("RoundingOTTimeNum")
                        .HasColumnType("int");

                    b.Property<int?>("RoundingOTTimeType")
                        .HasColumnType("int");

                    b.Property<bool>("RoundingWorkedHour")
                        .HasColumnType("bit");

                    b.Property<int?>("RoundingWorkedHourNum")
                        .HasColumnType("int");

                    b.Property<int?>("RoundingWorkedHourType")
                        .HasColumnType("int");

                    b.Property<bool>("RoundingWorkedTime")
                        .HasColumnType("bit");

                    b.Property<int?>("RoundingWorkedTimeNum")
                        .HasColumnType("int");

                    b.Property<int?>("RoundingWorkedTimeType")
                        .HasColumnType("int");

                    b.Property<int?>("RuleInOut")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("TA_Rules_Shift");
                });

            modelBuilder.Entity("EPAD_Data.Entities.TA_Rules_Shift_InOut", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FromOvernightTime")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RuleShiftIndex")
                        .HasColumnType("int");

                    b.Property<int>("TimeMode")
                        .HasColumnType("int");

                    b.Property<bool>("ToOvernightTime")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ToTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("TA_Rules_Shift_InOut");
                });

            modelBuilder.Entity("EPAD_Data.Entities.TA_ScheduleFixedByDepartment", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<long>("DepartmentIndex")
                        .HasColumnType("bigint");

                    b.Property<int>("Friday")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Monday")
                        .HasColumnType("int");

                    b.Property<int>("Saturday")
                        .HasColumnType("int");

                    b.Property<int>("Sunday")
                        .HasColumnType("int");

                    b.Property<int>("Thursday")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tuesday")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wednesday")
                        .HasColumnType("int");

                    b.HasKey("Index");

                    b.ToTable("TA_ScheduleFixedByDepartment");
                });

            modelBuilder.Entity("EPAD_Data.Entities.TA_ScheduleFixedByEmployee", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Friday")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Monday")
                        .HasColumnType("int");

                    b.Property<int>("Saturday")
                        .HasColumnType("int");

                    b.Property<int>("Sunday")
                        .HasColumnType("int");

                    b.Property<int>("Thursday")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tuesday")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wednesday")
                        .HasColumnType("int");

                    b.HasKey("Index");

                    b.ToTable("TA_ScheduleFixedByEmployee");
                });

            modelBuilder.Entity("EPAD_Data.Entities.TA_Shift", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AllowEarlyOutMinutes")
                        .HasColumnType("int");

                    b.Property<int?>("AllowLateInMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("BreakEndOvernightTime")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BreakEndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("BreakStartOvernightTime")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BreakStartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CheckOutOvernightTime")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CheckOutTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DetermineBreakTimeByAttendanceLog")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBreakTime")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOT")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOTFirst")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaidHolidayShift")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OTEndOvernightTime")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OTEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OTEndTimeFirst")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OTStartOvernightTime")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OTStartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OTStartTimeFirst")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PaidHolidayEndOvernightTime")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PaidHolidayEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PaidHolidayStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RulesShiftIndex")
                        .HasColumnType("int");

                    b.Property<float>("TheoryWorkedTimeByShift")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("TA_Shift");
                });

            modelBuilder.Entity("EPAD_Data.Entities.TA_TimeAttendanceLog", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<double>("CheckInLate")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<double>("CheckOutEarly")
                        .HasColumnType("float");

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftIndex")
                        .HasColumnType("int");

                    b.Property<double>("TotalBusinessTrip")
                        .HasColumnType("float");

                    b.Property<double>("TotalDayOff")
                        .HasColumnType("float");

                    b.Property<double>("TotalHoliday")
                        .HasColumnType("float");

                    b.Property<double>("TotalOverTime")
                        .HasColumnType("float");

                    b.Property<double>("TotalOverTimeDayOff")
                        .HasColumnType("float");

                    b.Property<double>("TotalOverTimeHoliday")
                        .HasColumnType("float");

                    b.Property<double>("TotalOverTimeNightDayOff")
                        .HasColumnType("float");

                    b.Property<double>("TotalOverTimeNightHoliday")
                        .HasColumnType("float");

                    b.Property<double>("TotalOverTimeNightNormal")
                        .HasColumnType("float");

                    b.Property<double>("TotalOverTimeNormal")
                        .HasColumnType("float");

                    b.Property<double>("TotalWorkingDay")
                        .HasColumnType("float");

                    b.Property<double>("TotalWorkingTime")
                        .HasColumnType("float");

                    b.Property<double>("TotalWorkingTimeNight")
                        .HasColumnType("float");

                    b.Property<double>("TotalWorkingTimeNormal")
                        .HasColumnType("float");

                    b.HasKey("Index");

                    b.ToTable("TA_TimeAttendanceLog");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Audit", b =>
                {
                    b.HasOne("EPAD_Data.Entities.IC_SystemCommand", "IC_SystemCommand")
                        .WithMany("IC_Audits")
                        .HasForeignKey("IC_SystemCommandIndex");

                    b.Navigation("IC_SystemCommand");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Employee_Shift", b =>
                {
                    b.HasOne("EPAD_Data.Entities.IC_Shift", "IC_Shift")
                        .WithMany("EmployeeShifts")
                        .HasForeignKey("IC_ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IC_Shift");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Shift", b =>
                {
                    b.Navigation("EmployeeShifts");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_SystemCommand", b =>
                {
                    b.Navigation("IC_Audits");
                });
#pragma warning restore 612, 618
        }
    }
}
