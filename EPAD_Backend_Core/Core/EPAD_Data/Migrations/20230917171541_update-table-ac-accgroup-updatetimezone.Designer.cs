// <auto-generated />
using System;
using EPAD_Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EPAD_Backend_Core.Migrations
{
    [DbContext(typeof(EPAD_Context))]
    [Migration("20230917171541_update-table-ac-accgroup-updatetimezone")]
    partial class updatetableacaccgroupupdatetimezone
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EPAD_Data.Entities.AC_AccGroup", b =>
                {
                    b.Property<int>("UID")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TimeZone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Timezone1")
                        .HasColumnType("int");

                    b.Property<int>("Timezone2")
                        .HasColumnType("int");

                    b.Property<int>("Timezone3")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ValidHoliday")
                        .HasColumnType("bit");

                    b.Property<int>("Verify")
                        .HasColumnType("int");

                    b.HasKey("UID");

                    b.ToTable("AC_AccGroup");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_AccHoliday", b =>
                {
                    b.Property<int>("UID")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HolidayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TimeZone")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UID");

                    b.ToTable("AC_AccHoliday");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_Area", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("AC_Area");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_AreaAndDoor", b =>
                {
                    b.Property<int>("AreaIndex")
                        .HasColumnType("int");

                    b.Property<int>("DoorIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AreaIndex", "DoorIndex");

                    b.ToTable("AC_AreaAndDoor");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_Door", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isUsingGroup")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index");

                    b.ToTable("AC_Door");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_DoorAndDevice", b =>
                {
                    b.Property<int>("DoorIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DoorIndex", "SerialNumber");

                    b.ToTable("AC_DoorAndDevice");
                });

            modelBuilder.Entity("EPAD_Data.Entities.AC_TimeZone", b =>
                {
                    b.Property<int>("UID")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("FriEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FriStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SatEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SatStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SunEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SunStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThurStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThursEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TuesEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TuesStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WedStart")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UID");

                    b.ToTable("AC_TimeZone");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR.HR_GradeInfo", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Index");

                    b.ToTable("HR_GradeInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR.HR_PositionInfo", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameInEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Index", "CompanyIndex");

                    b.ToTable("HR_PositionInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR.HR_TeamInfo", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Index");

                    b.ToTable("HR_TeamInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR.HR_UserContactInfo", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserIndex")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Index", "CompanyIndex");

                    b.ToTable("HR_UserContactInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR.HR_UserType", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EnglishName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("IsEmployee")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<short>("Order")
                        .HasColumnType("smallint");

                    b.Property<short>("StatusId")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("UserTypeId")
                        .HasColumnType("smallint");

                    b.HasKey("Index", "CompanyIndex");

                    b.ToTable("HR_UserType");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_CardNumberInfo", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardNumber")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("HR_CardNumberInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_ClassInfo", b =>
                {
                    b.Property<string>("Index")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("GradeIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameInEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Index", "CompanyIndex");

                    b.ToTable("HR_ClassInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_ContractorInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Company")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FromTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NRIC")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ToTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("HR_ContractorInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_CustomerInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("AccompanyingPersonList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BikeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BikeModel")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BikePlate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("BikeType")
                        .HasColumnType("smallint");

                    b.Property<string>("Company")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPersonATIDs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("DataStorageTime")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ExtensionTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("GoInSystem")
                        .HasColumnType("bit");

                    b.Property<byte[]>("IdentityImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool?>("IsVIP")
                        .HasColumnType("bit");

                    b.Property<string>("LicensePlateBackImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicensePlateFrontImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRIC")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NRICBackImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NRICFrontImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("NumberOfContactPerson")
                        .HasColumnType("smallint");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RegisterCode")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RulesCustomerIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WorkContent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("HR_CustomerInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_EmployeeInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("HR_EmployeeInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_NannyInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("ClassID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("HR_NannyInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_ParentInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Students")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("HR_ParentInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_StudentClassInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TeacherID")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClassInfoIndex")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NannyID")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeATID", "TeacherID", "ClassInfoIndex");

                    b.ToTable("HR_StudentClassInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_StudentInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("ClassID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("HR_StudentInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_TeacherInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("ClassID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("HR_TeacherInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.HR_User", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DayOfBirth")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EmployeeType")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<short?>("Gender")
                        .HasColumnType("smallint");

                    b.Property<int?>("MonthOfBirth")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearOfBirth")
                        .HasColumnType("int");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("HR_User");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_AccessToken", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Scope")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_AccessToken");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_AppLicense", b =>
                {
                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PublicKey")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CompanyIndex");

                    b.ToTable("IC_AppLicense");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_AttendanceLog", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("AccessDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AccessTime")
                        .HasColumnType("datetime2");

                    b.Property<double?>("BodyTemperature")
                        .HasColumnType("float");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeviceNumber")
                        .HasColumnType("int");

                    b.Property<int?>("FaceMask")
                        .HasColumnType("int");

                    b.Property<string>("Function")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("InOutMode")
                        .HasColumnType("smallint");

                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsSend")
                        .HasColumnType("bit");

                    b.Property<int?>("Reserve1")
                        .HasColumnType("int");

                    b.Property<string>("RoomCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("VerifyMode")
                        .HasColumnType("smallint");

                    b.Property<int?>("WorkCode")
                        .HasColumnType("int");

                    b.HasKey("EmployeeATID", "CompanyIndex", "CheckTime", "SerialNumber");

                    b.ToTable("IC_AttendanceLog");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_AttendanceLogClassRoom", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoomId")
                        .HasColumnType("varchar(150)");

                    b.Property<double?>("BodyTemperature")
                        .HasColumnType("float");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FaceMask")
                        .HasColumnType("int");

                    b.Property<string>("Function")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("InOutMode")
                        .HasColumnType("smallint");

                    b.Property<int?>("Reserve1")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("VerifyMode")
                        .HasColumnType("smallint");

                    b.Property<int?>("WorkCode")
                        .HasColumnType("int");

                    b.HasKey("EmployeeATID", "CompanyIndex", "CheckTime", "RoomId");

                    b.ToTable("IC_AttendanceLogClassRoom");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_AttendancelogIntegrate", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AccessDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AccessTime")
                        .HasColumnType("datetime2");

                    b.Property<double?>("BodyTemperature")
                        .HasColumnType("float");

                    b.Property<DateTime>("CheckTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeviceNumber")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("FaceMask")
                        .HasColumnType("int");

                    b.Property<string>("Function")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("InOutMode")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsSend")
                        .HasColumnType("bit");

                    b.Property<int?>("Reserve1")
                        .HasColumnType("int");

                    b.Property<string>("RoomCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("VerifyMode")
                        .HasColumnType("smallint");

                    b.Property<int?>("WorkCode")
                        .HasColumnType("int");

                    b.HasKey("Index");

                    b.ToTable("IC_AttendancelogIntegrate");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Audit", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DescriptionEn")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("IC_SystemCommandIndex")
                        .HasColumnType("int");

                    b.Property<string>("KeyValues")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumFailure")
                        .HasColumnType("int");

                    b.Property<int?>("NumSuccess")
                        .HasColumnType("int");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageName")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Index");

                    b.HasIndex("IC_SystemCommandIndex");

                    b.ToTable("IC_Audit");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Camera", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("Serial")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Camera");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Command", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Command")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CommandName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CommandType")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Excuted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ExcutedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RequestedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Command");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_CommandSystemGroup", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Excuted")
                        .HasColumnType("bit");

                    b.Property<string>("ExternalData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_CommandSystemGroup");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Company", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Company");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Config", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AlwaysSend")
                        .HasColumnType("bit");

                    b.Property<string>("BodyEmailError")
                        .HasColumnType("ntext");

                    b.Property<string>("BodyEmailSuccess")
                        .HasColumnType("ntext");

                    b.Property<double?>("BodyTemperature")
                        .HasColumnType("float");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("CustomField")
                        .HasColumnType("ntext");

                    b.Property<string>("Email")
                        .HasColumnType("ntext");

                    b.Property<string>("EventType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PreviousDays")
                        .HasColumnType("int");

                    b.Property<string>("ProceedAfterEvent")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("SendMailWhenError")
                        .HasColumnType("bit");

                    b.Property<string>("TimePos")
                        .HasColumnType("ntext");

                    b.Property<string>("TitleEmailError")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TitleEmailSuccess")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Config");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_ConfigByGroupMachine", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AlwaysSend")
                        .HasColumnType("bit");

                    b.Property<string>("BodyEmailError")
                        .HasColumnType("ntext");

                    b.Property<string>("BodyEmailSuccess")
                        .HasColumnType("ntext");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("CustomField")
                        .HasColumnType("ntext");

                    b.Property<string>("Email")
                        .HasColumnType("ntext");

                    b.Property<string>("EventType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GroupDeviceIndex")
                        .HasColumnType("int");

                    b.Property<int?>("PreviousDays")
                        .HasColumnType("int");

                    b.Property<string>("ProceedAfterEvent")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("SendMailWhenError")
                        .HasColumnType("bit");

                    b.Property<string>("TimePos")
                        .HasColumnType("ntext");

                    b.Property<string>("TitleEmailError")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TitleEmailSuccess")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_ConfigByGroupMachine");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Controller", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDController")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Controller");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_DepartmemtAEONSync", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool?>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStore")
                        .HasColumnType("bit");

                    b.Property<int?>("JobGradeGrade")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OVNID")
                        .HasColumnType("int");

                    b.Property<int?>("OrgUnitID")
                        .HasColumnType("int");

                    b.Property<int?>("OrgUnitParentNode")
                        .HasColumnType("int");

                    b.Property<string>("ParentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentIndex")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_DepartmemtAEONSync");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Department", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool?>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStore")
                        .HasColumnType("bit");

                    b.Property<int?>("JobGradeGrade")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OVNID")
                        .HasColumnType("int");

                    b.Property<int?>("OrgUnitID")
                        .HasColumnType("int");

                    b.Property<int?>("OrgUnitParentNode")
                        .HasColumnType("int");

                    b.Property<string>("ParentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentIndex")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Department");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_DepartmentAndDevice", b =>
                {
                    b.Property<int>("DepartmentIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DepartmentIndex", "SerialNumber", "CompanyIndex");

                    b.ToTable("IC_DepartmentAndDevice");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Device", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("ATTLOGStamp")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ATTPHOTOStamp")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("AdminCount")
                        .HasColumnType("int");

                    b.Property<string>("AliasName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("AttendanceLogCapacity")
                        .HasColumnType("int");

                    b.Property<int?>("AttendanceLogCount")
                        .HasColumnType("int");

                    b.Property<string>("ConnectionCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Delay")
                        .HasColumnType("int");

                    b.Property<string>("DeviceId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeviceModel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeviceModule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DeviceNumber")
                        .HasColumnType("int");

                    b.Property<int?>("DeviceStatus")
                        .HasColumnType("int");

                    b.Property<int?>("DeviceType")
                        .HasColumnType("int");

                    b.Property<short?>("Encrypt")
                        .HasColumnType("smallint");

                    b.Property<int?>("ErrorDelay")
                        .HasColumnType("int");

                    b.Property<string>("FINGERTMPStamp")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("FaceCapacity")
                        .HasColumnType("int");

                    b.Property<int?>("FaceCount")
                        .HasColumnType("int");

                    b.Property<int?>("FingerCapacity")
                        .HasColumnType("int");

                    b.Property<int?>("FingerCount")
                        .HasColumnType("int");

                    b.Property<string>("FirmwareVersion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsSendMailLastDisconnect")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastConnection")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OPERLOGStamp")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("OpStamp")
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("OperationLogCount")
                        .HasColumnType("int");

                    b.Property<string>("PhotoStamp")
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("Port")
                        .HasColumnType("int");

                    b.Property<int?>("Realtime")
                        .HasColumnType("int");

                    b.Property<string>("Reserve1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reserve2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Reserve3")
                        .HasColumnType("int");

                    b.Property<string>("SMSStamp")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Stamp")
                        .HasColumnType("varchar(15)");

                    b.Property<short?>("TimeZoneclock")
                        .HasColumnType("smallint");

                    b.Property<string>("TransFlag")
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("TransInterval")
                        .HasColumnType("int");

                    b.Property<string>("TransTimes")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("USERINFOStamp")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("USER_SMSStamp")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("UsePush")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseSDK")
                        .HasColumnType("bit");

                    b.Property<int?>("UserCapacity")
                        .HasColumnType("int");

                    b.Property<int?>("UserCount")
                        .HasColumnType("int");

                    b.HasKey("SerialNumber", "CompanyIndex");

                    b.ToTable("IC_Device");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_DeviceHistory", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Index");

                    b.ToTable("IC_DeviceHistory");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_EmployeeTransfer", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<int>("NewDepartment")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("AddOnNewDepartment")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool?>("IsSync")
                        .HasColumnType("bit");

                    b.Property<long?>("OldDepartment")
                        .HasColumnType("bigint");

                    b.Property<bool>("RemoveFromOldDepartment")
                        .HasColumnType("bit");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("ToTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex", "NewDepartment", "FromTime");

                    b.ToTable("IC_EmployeeTransfer");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Employee_Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IC_ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShiftApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShiftFromTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShiftToTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IC_ShiftId");

                    b.ToTable("IC_Employee_Shift");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_GroupDevice", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_GroupDevice");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_GroupDeviceDetails", b =>
                {
                    b.Property<int>("GroupDeviceIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GroupDeviceIndex", "CompanyIndex", "SerialNumber");

                    b.ToTable("IC_GroupDeviceDetails");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_HardwareLicense", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("FileName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_HardwareLicense");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_HistoryTrackingIntegrate", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<int>("DataDelete")
                        .HasColumnType("int");

                    b.Property<int>("DataNew")
                        .HasColumnType("int");

                    b.Property<int>("DataUpdate")
                        .HasColumnType("int");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RunTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Index");

                    b.ToTable("IC_HistoryTrackingIntegrate");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_MailHistory", b =>
                {
                    b.Property<long>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<string>("Content")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailTo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Times")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Index");

                    b.ToTable("IC_MailHistory");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_OperationLog", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("OpTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("AdminID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("OpCode")
                        .HasColumnType("smallint");

                    b.Property<short?>("Reserve1")
                        .HasColumnType("smallint");

                    b.Property<short?>("Reserve2")
                        .HasColumnType("smallint");

                    b.Property<short?>("Reserve3")
                        .HasColumnType("smallint");

                    b.Property<short?>("Reserve4")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SerialNumber", "CompanyIndex", "OpTime");

                    b.ToTable("IC_OperationLog");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Printer", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("PrinterModel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Printer");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_PrivilegeDepartment", b =>
                {
                    b.Property<int>("PrivilegeIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<long>("DepartmentIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PrivilegeIndex", "CompanyIndex", "DepartmentIndex", "Role");

                    b.ToTable("IC_PrivilegeDepartment");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_PrivilegeDetails", b =>
                {
                    b.Property<int>("PrivilegeIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("FormName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PrivilegeIndex", "CompanyIndex", "FormName");

                    b.ToTable("IC_PrivilegeDetails");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_PrivilegeDeviceDetails", b =>
                {
                    b.Property<int>("PrivilegeIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PrivilegeIndex", "CompanyIndex", "SerialNumber", "Role");

                    b.ToTable("IC_PrivilegeDeviceDetails");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_PrivilegeMachineRealtime", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceModule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeviceSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupDeviceIndex")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<short>("PrivilegeGroup")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_PrivilegeMachineRealtime");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_RelayController", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("RelayType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SignalType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_RelayController");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_RelayControllerChannel", b =>
                {
                    b.Property<int>("RelayControllerIndex")
                        .HasColumnType("int");

                    b.Property<short>("ChannelIndex")
                        .HasColumnType("smallint");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<int>("SignalType")
                        .HasColumnType("int");

                    b.Property<double>("NumberOfSecondsOff")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RelayControllerIndex", "ChannelIndex", "CompanyIndex", "SignalType");

                    b.ToTable("IC_RelayControllerChannel");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Service", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ServiceType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_Service");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_ServiceAndDevices", b =>
                {
                    b.Property<int>("ServiceIndex")
                        .HasColumnType("int");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ServiceIndex", "CompanyIndex", "SerialNumber");

                    b.ToTable("IC_ServiceAndDevices");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("IC_Shift");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_SystemCommand", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Command")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CommandName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeATIDs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Excuted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ExcutedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExcutingServiceIndex")
                        .HasColumnType("int");

                    b.Property<int>("GroupIndex")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOverwriteData")
                        .HasColumnType("bit");

                    b.Property<string>("Params")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_SystemCommand");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_UserAccount", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<short>("AccountPrivilege")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("LockTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ResetPasswordCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserName", "CompanyIndex");

                    b.ToTable("IC_UserAccount");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_UserFaceTemplate", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<short>("FaceIndex")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FaceTemplate")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex", "SerialNumber", "FaceIndex");

                    b.ToTable("IC_UserFaceTemplate");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_UserFaceTemplate_v2", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duress")
                        .HasColumnType("int");

                    b.Property<int>("Format")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int>("MajorVer")
                        .HasColumnType("int");

                    b.Property<int>("MinorVer")
                        .HasColumnType("int");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("TemplateBIODATA")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Valid")
                        .HasColumnType("int");

                    b.HasKey("EmployeeATID", "CompanyIndex", "SerialNumber");

                    b.ToTable("IC_UserFaceTemplate_v2");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_UserFinger", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<short>("FingerIndex")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FingerData")
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex", "SerialNumber", "FingerIndex");

                    b.ToTable("IC_UserFinger");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_UserInfo", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AuthenMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FaceTemplate")
                        .HasColumnType("int");

                    b.Property<int?>("FaceTemplateV2")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData0")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData1")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData2")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData3")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData4")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData5")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData6")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData7")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData8")
                        .HasColumnType("int");

                    b.Property<int?>("FingerData9")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<short?>("Privilege")
                        .HasColumnType("smallint");

                    b.Property<string>("Reserve1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Reserve2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("VeinsData1")
                        .HasColumnType("int");

                    b.Property<int?>("VeinsData2")
                        .HasColumnType("int");

                    b.Property<int?>("VeinsData3")
                        .HasColumnType("int");

                    b.HasKey("EmployeeATID", "CompanyIndex", "SerialNumber");

                    b.ToTable("IC_UserInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_UserMaster", b =>
                {
                    b.Property<string>("EmployeeATID")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<string>("AuthenMode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("FaceIndex")
                        .HasColumnType("smallint");

                    b.Property<string>("FaceTemplate")
                        .HasColumnType("text");

                    b.Property<string>("FaceV2_Content")
                        .HasColumnType("text");

                    b.Property<int?>("FaceV2_Duress")
                        .HasColumnType("int");

                    b.Property<int?>("FaceV2_Format")
                        .HasColumnType("int");

                    b.Property<int?>("FaceV2_Index")
                        .HasColumnType("int");

                    b.Property<int?>("FaceV2_MajorVer")
                        .HasColumnType("int");

                    b.Property<int?>("FaceV2_MinorVer")
                        .HasColumnType("int");

                    b.Property<int?>("FaceV2_No")
                        .HasColumnType("int");

                    b.Property<int?>("FaceV2_Size")
                        .HasColumnType("int");

                    b.Property<string>("FaceV2_TemplateBIODATA")
                        .HasColumnType("text");

                    b.Property<int?>("FaceV2_Type")
                        .HasColumnType("int");

                    b.Property<int?>("FaceV2_Valid")
                        .HasColumnType("int");

                    b.Property<string>("FaceVersion")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FingerData0")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData1")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData2")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData3")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData4")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData5")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData6")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData7")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData8")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerData9")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FingerVersion")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NameOnMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<short?>("Privilege")
                        .HasMaxLength(200)
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmployeeATID", "CompanyIndex");

                    b.ToTable("IC_UserMaster");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_UserNotification", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Index");

                    b.ToTable("IC_UserNotification");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_UserPrivilege", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("UseForDefault")
                        .HasColumnType("bit");

                    b.HasKey("Index");

                    b.ToTable("IC_UserPrivilege");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_WorkingInfo", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyIndex")
                        .HasColumnType("int");

                    b.Property<long>("DepartmentIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("EmployeeATID")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsManager")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSync")
                        .HasColumnType("bit");

                    b.Property<long>("PositionIndex")
                        .HasColumnType("bigint");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<int?>("TeamIndex")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Index");

                    b.ToTable("IC_WorkingInfo");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Audit", b =>
                {
                    b.HasOne("EPAD_Data.Entities.IC_SystemCommand", "IC_SystemCommand")
                        .WithMany("IC_Audits")
                        .HasForeignKey("IC_SystemCommandIndex");

                    b.Navigation("IC_SystemCommand");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Employee_Shift", b =>
                {
                    b.HasOne("EPAD_Data.Entities.IC_Shift", "IC_Shift")
                        .WithMany("EmployeeShifts")
                        .HasForeignKey("IC_ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IC_Shift");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_Shift", b =>
                {
                    b.Navigation("EmployeeShifts");
                });

            modelBuilder.Entity("EPAD_Data.Entities.IC_SystemCommand", b =>
                {
                    b.Navigation("IC_Audits");
                });
#pragma warning restore 612, 618
        }
    }
}
